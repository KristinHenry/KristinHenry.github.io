

/*

In this data structure, the first three numbers in zip codes are mapped to IDs for 
USPS sorting centers/

The IDs for the centers, are prectically arbitrary...as they are based on alphabetical
order of a list of USPS sorting centers. So, it's mmy own id system, rather than anything
that the USPS may use.

The idea is that I can query this dictionary with the first three numbers of a zip code, 
and get back the USPS sorting center assigned to it...and then look up additionaly data in 
postalCentersMap dictionary...like lat/lon of the center.


		In addition to quickly look up zip code key,
		This strucure is intended to help finding nearest neighbor, if 
		first three numbers of zip code are entered incorrectly...or other 
		errors of input
*/


var zipsTree = {	
0: {0:{5:108, 6:160, 7:160, 8:160, 9:160}, 
	1:{0:73, 1:73, 2:73, 3:28, 4:28, 5:28, 6:28, 7:28, 8:110, 9:110}, 
	2:{0:21, 1:20, 2:20, 3:21, 4:20, 5:138, 6:138, 7:138, 8:138, 9:138}, 
	3:{0:100, 1:100, 2:100, 3:100, 4:100, 5:190, 6:190, 7:190, 8:100, 9:170}, 
	4:{0:170, 1:170, 2:170, 3:170, 4:48, 5:170, 6:48, 7:48, 8:170, 9:48}, 
	5:{0:190, 1:190, 2:190, 3:190, 4:24, 5:110, 6:24, 7:190, 8:190, 9:190}, 
	6:{0:73, 1:73, 2:73, 3:73, 4:73, 5:73, 6:188, 7:73, 8:188, 9:188}, 
	7:{0:84, 1:84, 2:84, 3:84, 4:179, 5:179, 6:179, 7:181, 8:179, 9:84}, 
	8:{0:168, 1:168, 2:168, 3:168, 4:168, 5:181, 6:181, 7:181, 8:84, 9:84}
	},
1: {0:{0:120, 1:120, 2:120, 3:22, 4:120, 5:188, 6:188, 7:188, 8:188, 9:188}, 
	1:{0:141, 1:141, 2:22, 3:141, 4:141, 5:189, 6:22, 7:108, 8:108, 9:108}, 
	2:{0:4, 1:4, 2:4, 3:4, 4:107, 5:107, 6:107, 7:107, 8:4, 9:4}, 
	3:{0:175, 1:175, 2:175, 3:175, 4:175, 5:175, 6:175, 7:175, 8:175, 9:175}, 
	4:{0:23, 1:23, 2:23, 3:23, 4:148, 5:148, 6:148, 7:23, 8:148, 9:148}, 
	5:{0:136, 1:136, 2:136, 3:136, 4:136, 5:81, 6:136, 7:81, 8:81, 9:81}, 
	6:{0:136, 1:136, 2:136, 3:136, 4:136, 5:136, 6:81, 7:148, 8:81, 9:72}, 
	7:{0:72, 1:72, 2:72, 3:72, 4:72, 5:72, 6:72, 7:72, 8:72, 9:72}, 
	8:{0:90, 1:90, 2:90, 3:90, 4:90, 5:90, 6:90, 7:90, 8:90, 9:134}, 
	9:{0:134, 1:134, 2:134, 3:192, 4:134, 5:72, 6:72, 7:192, 8:192, 9:192}
	},
2: {0:{0:184, 1:47, 2:184, 3:184, 4:184, 5:184, 6:171, 7:171, 8:171, 9:171}, 
	1:{0:92, 1:92, 2:13, 4:92, 5:13, 6:49, 7:13, 8:49, 9:13}, 
	2:{0:126, 1:126, 2:126, 3:126, 4:146, 5:146, 7:47, 8:146, 9:146}, 
	3:{0:146, 1:146, 2:146, 3:121, 4:121, 5:121, 6:121, 7:121, 8:146, 9:146}, 
	4:{0:147, 1:147, 2:86, 3:147, 4:146, 5:147, 6:31, 7:31, 8:31, 9:31}, 
	5:{0:31, 1:31, 2:31, 3:31, 4:72, 5:31, 6:31, 7:31, 8:31, 9:31}, 
	6:{0:136, 1:31, 2:31, 3:31, 4:31, 5:136, 6:31, 7:13, 8:47}, 
	7:{0:69, 1:69, 2:69, 3:69, 4:69, 5:42, 6:142, 7:142, 8:149, 9:149}, 
	8:{0:32, 1:32, 2:32, 3:57, 4:57, 5:57, 6:69, 7:70, 8:70, 9:70}, 
	9:{0:38, 1:38, 2:38, 3:70, 4:70, 5:38, 6:70, 7:32, 8:10, 9:30}
	},
3: {0:{0:123, 1:9, 2:9, 3:9, 4:97, 5:123, 6:123, 7:33, 8:10, 9:10}, 
	1:{0:97, 1:9, 2:97, 3:80, 4:80, 5:80, 6:177, 7:177, 8:97, 9:97}, 
	2:{0:80, 1:130, 2:80, 3:177, 4:132, 5:132, 6:80, 7:130, 8:130, 9:130}, 
	3:{0:106, 1:106, 2:106, 3:106, 4:187, 5:178, 6:178, 7:99, 8:99, 9:58}, 
	4:{1:58, 2:99, 4:80, 6:178, 7:130, 9:187}, 
	5:{0:17, 1:17, 2:17, 4:17, 5:17, 6:17, 7:17, 8:17, 9:17}, 
	6:{0:116, 1:116, 2:17, 3:116, 4:116, 5:115, 6:115, 7:116, 8:116, 9:79}, 
	7:{0:118, 1:118, 2:118, 3:33, 4:33, 5:104, 6:86, 7:86, 8:86, 9:86}, 
	8:{0:104, 1:104, 2:104, 3:104, 4:118, 5:118, 6:104, 7:79, 8:104, 9:79}, 
	9:{0:79, 1:79, 2:79, 3:79, 4:74, 5:71, 6:79, 7:79, 8:177, 9:9}
	},
4: {0:{0:95, 1:95, 2:95, 3:91, 4:91, 5:91, 6:91, 7:86, 8:86, 9:86}, 
	1:{0:36, 1:31, 2:31, 3:91, 4:91, 5:31, 6:31, 7:86, 8:86}, 
	2:{0:54, 1:118, 2:118, 3:54, 4:54, 5:86, 6:86, 7:95}, 
	3:{0:39, 1:39, 2:39, 3:39, 4:46, 5:46, 6:46, 7:39, 8:39, 9:136}, 
	4:{0:37, 1:37, 2:3, 3:3, 4:37, 5:37, 6:3, 7:3, 8:37, 9:37}, 
	5:{0:36, 1:36, 2:36, 3:43, 4:43, 5:43, 6:39, 7:39, 8:39, 9:36}, 
	6:{0:76, 1:76, 2:76, 3:63, 4:63, 5:167, 6:167, 7:59, 8:59, 9:76}, 
	7:{0:36, 1:95, 2:76, 3:117, 4:76, 5:54, 6:54, 7:54, 8:76, 9:76}, 
	8:{0:105, 1:46, 2:46, 3:105, 4:105, 5:105, 6:105, 7:105, 8:88, 9:88}, 
	9:{0:65, 1:65, 2:46, 3:65, 4:65, 5:65, 6:180, 7:180, 8:78, 9:78}
	},
5: {0:{0:45, 1:45, 2:45, 3:45, 4:185, 5:45, 6:185, 7:185, 8:45, 9:45}, 
	1:{0:166, 1:166, 2:166, 3:166, 4:45, 5:129, 6:129}, 
	2:{0:27, 1:185, 2:27, 3:27, 4:27, 5:45, 6:140, 7:140, 8:140}, 
	3:{0:112, 1:112, 2:112, 4:112, 5:98, 7:98, 8:98, 9:98}, 
	4:{0:153, 1:68, 2:68, 3:68, 4:68, 5:68, 6:153, 7:50, 8:50, 9:112}, 
	5:{0:153, 1:153, 3:113, 4:113, 5:113, 6:153, 7:153, 8:153, 9:153}, 
	6:{0:101, 1:101, 2:151, 3:151, 4:151, 5:55, 6:15, 7:64, 9:184}, 
	7:{0:166, 1:166, 2:41, 3:41, 4:41, 5:41, 6:18, 7:143}, 
	8:{0:55, 1:55, 2:64, 3:64, 4:55, 5:18, 6:18, 7:18, 8:18}, 
	9:{0:16, 1:16, 2:16, 3:16, 4:66, 5:66, 6:66, 7:66, 8:114, 9:114}
	},
6: {0:{0:131, 1:25, 2:131, 3:25, 4:169, 5:61, 6:35, 7:35, 8:35, 9:29}, 
	1:{0:131, 1:131, 2:140, 3:133, 4:133, 5:133, 6:133, 7:29, 8:29, 9:29}, 
	2:{0:152, 2:152, 3:173, 4:29, 5:173, 6:173, 7:173, 8:152, 9:152}, 
	3:{0:152, 1:152, 3:152, 4:152, 5:109, 6:152, 7:152, 8:152, 9:152}, 
	4:{0:83, 1:83, 4:83, 5:83, 6:83, 7:83, 8:174, 9:83}, 
	5:{0:109, 1:109, 2:109, 3:109, 4:174, 5:174, 6:174, 7:174, 8:174}, 
	6:{0:83, 1:83, 2:83, 4:83, 5:83, 6:83, 7:83, 8:83, 9:191}, 
	7:{0:191, 1:191, 2:191, 3:191, 4:191, 5:191, 6:191, 7:124, 8:191, 9:6}, 
	8:{0:129, 1:129, 3:129, 4:129, 5:129, 6:129, 7:129, 8:129, 9:129}, 
	9:{0:124, 1:124, 2:124, 3:124}
	},
7: {0:{0:119, 1:119, 3:119, 4:119, 5:87, 6:87, 7:14, 8:14}, 
	1:{0:165, 1:165, 2:165, 3:165, 4:165, 6:93, 7:93, 8:165, 9:93}, 
	2:{0:93, 1:93, 2:93, 3:104, 4:104, 5:93, 6:56, 7:56, 8:93, 9:56}, 
	3:{0:128, 1:128, 3:11, 4:128, 5:128, 6:128, 7:128, 8:128, 9:6}, 
	4:{0:183, 1:183, 3:183, 4:183, 5:183, 6:183, 7:183, 8:128, 9:183}, 
	5:{0:125, 1:42, 2:42, 3:42, 4:125, 5:165, 6:165, 7:125, 8:125, 9:122}, 
	6:{0:60, 1:60, 2:60, 3:60, 4:60, 5:11, 6:60, 7:60, 8:2, 9:2}, 
	7:{0:122, 2:122, 3:122, 4:122, 5:122, 6:122, 8:122, 9:40}, 
	8:{0:155, 1:155, 2:155, 3:40, 4:40, 5:102, 6:11, 7:11, 8:155, 9:11}, 
	9:{0:6, 1:6, 2:6, 3:96, 4:96, 5:2, 6:2, 7:111, 8:51, 9:51}
	},
8: {0:{0:44, 1:44, 2:44, 3:44, 4:44, 5:44, 6:44, 7:44, 8:44, 9:44}, 
	1:{0:44, 1:44, 2:44, 3:5, 4:67, 5:67, 6:67}, 
	2:{0:34, 1:16, 2:34, 3:34, 4:26, 5:26, 6:26, 7:26, 8:26, 9:154}, 
	3:{0:154, 1:154, 2:154, 3:19, 4:154, 5:172, 6:19, 7:19, 8:172}, 
	4:{0:154, 1:154, 2:154, 3:154, 4:154, 5:139, 6:139, 7:139}, 
	5:{0:135, 1:135, 2:135, 3:135, 5:135, 6:182, 7:182, 9:135}, 
	6:{0:135, 3:135, 4:89, 5:5}, 
	7:{0:5, 1:5, 3:5, 4:5, 5:5, 6:5, 7:5, 8:5, 9:5}, 
	8:{0:51, 1:96, 2:96, 3:51, 4:5, 5:51, 9:89}, 
	9:{0:89, 1:89, 3:89, 4:145, 5:145, 7:145, 8:154}
	},
9: {0:{0:94, 1:94, 2:94, 3:94, 4:94, 5:94, 6:77, 7:94, 8:94}, 
	1:{0:163, 1:163, 2:163, 3:163, 4:163, 5:163, 6:163, 7:77, 8:77, 9:157}, 
	2:{0:157, 1:157, 2:156, 3:156, 4:156, 5:156, 6:161, 7:161, 8:7}, 
	3:{0:162, 1:162, 2:12, 3:12, 4:162, 5:12, 6:62, 7:62, 8:62, 9:159}, 
	4:{0:158, 1:158, 2:150, 3:158, 4:158, 5:127, 6:127, 7:127, 8:127, 9:158}, 
	5:{0:159, 1:159, 2:150, 3:150, 4:158, 5:53, 6:150, 7:150, 8:150, 9:150}, 
	6:{0:144, 1:145, 7:75, 8:75}, 
	7:{0:137, 1:137, 2:137, 3:137, 4:52, 5:103, 6:103, 7:137, 8:137, 9:19}, 
	8:{0:164, 1:164, 2:164, 3:176, 4:176, 5:176, 6:137, 8:186, 9:193}, 
	9:{0:172, 1:172, 2:172, 3:172, 4:172, 5:8, 6:8, 7:8, 8:82, 9:85}
	}
}
	





/*

In this data structure, the key/id can be used from the zip-center map.
The arrays hold [SortingCenterName, StateOfSortingCenter, lat, lon]

*/
var postalCentersMap = {
	2: ["Abilene", "TX", 32.44645, -99.7475905],
	3: ["Akron", "OH", 41.083064, -81.518485],
	4: ["Albany", "NY", 42.701036, -73.878702],
	5: ["Albuquerque", "NM", 35.0841034, -106.6509851],
	6: ["Amarillo", "TX", 35.2072185, -101.8338246],
	7: ["Anaheim", "CA", 33.8472947, -117.878317],
	8: ["Anchorage", "AK", 61.2163129, -149.8948523],
	9: ["Atlanta", "GA", 33.652792, -84.395843],
	10: ["Augusta", "GA", 33.471022, -81.967641],
	11: ["Austin", "TX", 30.334243, -97.6668293],
	12: ["Bakersfield", "CA", 35.3738712, -119.0194639],
	13: ["Baltimore", "MD", 39.291284, -76.604571],
	14: ["Baton Rouge", "LA", 30.4459596, -91.18738],
	15: ["Bemidji", "MN", 47.4785418, -94.8907869],
	16: ["Billings", "MT", 45.7874957, -108.49607],
	17: ["Birmingham", "AL", 33.5206824, -86.8024326],
	18: ["Bismarck", "ND", 46.808327, -100.783739],
	19: ["Boise", "ID", 43.6166163, -116.200886],
	20: ["Boston", "MA", 42.3508036, -71.0536732],
	21: ["Brockton", "MA", 42.0513512, -71.0617417],
	22: ["Brooklyn", "NY", 40.6637372, -73.8604624],
	23: ["Buffalo", "NY", 42.8849535, -78.8265195],
	24: ["Burlington", "VT", 44.505409, -73.14318],
	25: ["Carol Stream", "IL", 41.9149903, -88.103908],
	26: ["Casper", "WY", 40.7596198, -111.8867975],
	27: ["Cedar Rapids", "IA", 41.9758872, -91.6704053],
	28: ["Central Massachusetts", "MA", 42.111079, -71.672142],
	29: ["Champaign", "IL", 40.1373185, -88.2778743],
	30: ["Charleston", "SC", 32.7876012, -79.9402728],
	31: ["Charleston", "WV", 38.312087, -81.710456],	
	32: ["Charlotte", "NC", 35.238308, -80.912452],
	33: ["Chattanooga", "TN", 35.0537688, -85.1876517],
	34: ["Cheyenne", "WY", 41.139981, -104.820246],
	35: ["Chicago", "IL", 41.874361, -87.636784],
	36: ["Cincinnati", "OH", 39.1014537, -84.5124602],
	37: ["Cleveland", "OH", 41.5051613, -81.6934446],
	38: ["Columbia", "SC", 33.906231, -81.065814],
	39: ["Columbus", "OH", 39.9622601, -83.0007065],
	40: ["Corpus Christi", "TX", 27.7477253, -97.4014129],
	41: ["Dakota Central", "SD", 44.011103, -97.52532],
	42: ["Dallas", "TX", 32.7762719, -96.7968559],
	43: ["Dayton", "OH", 39.7589478, -84.1916069],
	44: ["Denver", "CO", 39.8317681, -104.6922579],
	45: ["Des Moines", "IA", 41.5910641, -93.6037149],
	46: ["Detroit", "MI", 42.323988, -83.063023],
	47: ["Dulles", "VA", 39.00074, -77.458761],
	48: ["Eastern", "ME", 44.778674, -68.796623],
	49: ["Eastern Shore", "MD", 38.7957906, -76.0668208],
	50: ["Eau Claire", "WI", 44.811349, -91.4984941],
	51: ["El Paso", "TX", 31.7754152, -106.4646348],
	52: ["Eugene", "OR", 44.0505054, -123.0950506],
	53: ["Eureka", "CA", 40.8020712, -124.1636729],
	54: ["Evansville", "IN", 37.9746722, -87.5675272],
	55: ["Fargo", "ND", 46.877229, -96.789821],
	56: ["Fayetteville", "AR", 36.0625843, -94.1574328],
	57: ["Fayetteville", "NC", 35.0558559, -78.8778424],
	58: ["Fort Myers", "FL", 26.640628, -81.8723084],
	59: ["Fort Wayne", "IN", 41.0799898, -85.1386015],
	60: ["Fort Worth", "TX", 32.8267648, -97.3191543],
	61: ["Fox Valley Aurora", "IL", 41.7620627, -88.2250103],
	62: ["Fresno", "CA", 36.7295295, -119.7088613],
	63: ["Gary", "IN", 41.6021292, -87.3371372],
	64: ["Grand Forks", "ND", 47.9078244, -97.0592028],
	65: ["Grand Rapids", "MI", 42.9632405, -85.6678639],
	66: ["Great Falls", "MT", 47.5048851, -111.2918908],
	67: ["Grand Junction", "CO", 39.063956, -108.5507317],
	68: ["Green Bay", "WI", 44.5126379, -88.0125794],
	69: ["Greensboro", "NC", 36.1068965, -79.9823012],
	70: ["Greenville", "SC", 34.8039488, -82.3451727],
	71: ["Gulfport", "MS", 30.3674198, -89.0928155],
	72: ["Harrisburg", "PA", 40.294191, -76.877622],
	73: ["Hartford", "CT", 41.789872, -72.661822],
	74: ["Hattiesburg", "MS", 31.3271189, -89.2903392],
	75: ["Honolulu", "HI", 21.304547, -157.8556764],
	76: ["Indianapolis", "IN", 39.7683331, -86.1583502],
	77: ["Industry", "CA", 34.013491, -117.971354],
	78: ["Iron Mountain", "MI", 45.820233, -88.06596],
	79:	["Jackson", "MS", 32.2990384, -90.1847691],
	80: ["Jacksonville", "FL", 30.3321838, -81.655651],
	81: ["Johnstown", "PA", 40.289619, -78.829105],
	82: ["Juneau", "AK", 58.3019496, -134.419734],
	83: ["Kansas City", "MO", 39.100105, -94.5781416],
	84: ["Kearny", "NJ", 40.7684342, -74.1454214],
	85: ["Ketchikan", "AK", 55.3430696, -131.6466819],
	86: ["Knoxville", "TN", 35.948205, -84.01306],
	87: ["Lafayette", "LA", 30.2240897, -92.0198427],
	88: ["Lansing", "MI", 42.7337712, -84.5553805],
	89: ["Las Vegas", "NV", 36.1672559, -115.1485163],
	90: ["Lehigh Valley", "PA", 40.673418, -75.366083],
	91: ["Lexington", "KY", 38.0464066, -84.4970393],
	92: ["Linthicum", "MD", 39.2096459, -76.67805],
	93: ["Little Rock", "AR", 34.7464809, -92.2895948],
	94: ["Los Angeles", "CA", 33.9792191, -118.256447],
	95: ["Louisville", "KY", 38.2542376, -85.759407],
	96: ["Lubbock", "TX", 33.5635206, -101.879336],
	97: ["Macon", "GA", 32.839996, -83.6391451],
	98: ["Madison", "WI", 43.098379, -89.3191675],
	99: ["Manasota", "FL", 27.403583, -82.543791],
	100: ["Manchester", "NH", 42.9481825, -71.4451108],
	101: ["Mankato", "MN", 44.1634663, -93.9993505],
	102: ["McAllen", "TX", 26.2043691, -98.230082],
	103: ["Medford", "OR", 42.3264181, -122.8718605],
	104: ["Memphis", "TN", 35.131994, -90.0564307],
	105: ["Metroplex", "MI", 42.6581037, -83.2890178],
	106: ["Miami", "FL", 25.7742658, -80.1936589],
	107: ["Mid-Hudson", "NY", 41.513642, -74.113819],
	108: ["Mid-Island", "NY", 40.7652344, -73.4204027],
	109: ["Mid-MO", "MO", 39.368137, -92.259079],
	110: ["Middlesex-Essex", "MA", 42.566667, -71.185293],
	111: ["Midland", "TX", 31.9973662, -102.0779482],
	112: ["Milwaukee", "WI", 43.0349931, -87.922497],
	113: ["Minneapolis", "MN", 44.9772995, -93.2654692],
	114: ["Missoula", "MT", 46.8701049, -113.9952672],
	115: ["Mobile", "AL", 30.6943566, -88.0430541],
	116: ["Montgomery", "AL", 32.3669656, -86.300648],
	117: ["Muncie", "IN", 40.1936892, -85.3865271],
	118: ["Nashville", "TN", 36.1493962, -86.6748792],
	119: ["New Orleans", "LA", 29.9499323, -90.0701156],
	120: ["New York", "NY", 42.7930413, -73.9499055],
	121: ["Norfolk", "VA", 36.8462923, -76.2929252],
	122: ["North Houston", "TX", 29.9302067, -95.323934],
	123: ["North Metro GA", "GA", 32.375496, -82.135751],
	124: ["North Platte", "NE", 41.1238873, -100.7654232],
	125: ["North Texas", "TX", 32.9550579, -97.0223733],
	126: ["Northern", "VA", 38.873644, -77.2355603],
	127: ["Oakland", "CA", 37.806449, -122.299967],
	128: ["Oklahoma City", "OK", 35.4729886, -97.5170536],
	129: ["Omaha", "NE", 41.2587459, -95.9383758],
	130: ["Orlando", "FL", 28.413625, -81.330841],
	131: ["Palatine", "IL", 42.028518, -87.857022],
	132: ["Pensacola", "FL", 30.421309, -87.2169149],
	133: ["Peoria", "IL", 40.6844699, -89.5956493],
	134: ["Philadelphia", "PA", 39.904805, -75.23723],
	135: ["Phoenix", "AZ", 33.4484367, -112.0741417],
	136: ["Pittsburgh", "PA", 40.4579648, -80.0196764],
	137: ["Portland", "OR", 45.5745309, -122.5932357],
	138: ["Providence", "RI", 41.8387175, -71.4138329],
	139: ["Provo", "UT", 40.2338438, -111.6585337],
	140: ["Quad Cities", "IL", 41.5160617, -90.562053],
	141: ["Queens", "NY", 40.781662, -73.8367022],
	142: ["Raleigh", "NC", 35.9054651, -78.7492316],
	143: ["Rapid City", "SD", 44.081176, -103.228006],
	144: ["Redding", "CA", 40.5863563, -122.3916754],
	145: ["Reno", "NV", 39.5261206, -119.8126581],
	146: ["Richmond", "VA", 37.4972, -77.257155],
	147: ["Roanoke", "VA", 37.2784543, -79.9339832],
	148: ["Rochester", "NY", 43.0861473, -77.5953457],
	149: ["Rocky Mount", "NC", 35.938197, -77.791551],
	150: ["Sacramento", "CA", 38.5723865, -121.568224],
	151: ["St. Cloud", "MN", 45.5616075, -94.1642004],
	152: ["St. Louis", "MO", 38.6289041, -90.2052258],
	153: ["St. Paul", "MN", 44.9504037, -93.1015026],
	154: ["Salt Lake City", "UT", 40.7596198, -111.8867975],
	155: ["San Antonio", "TX", 29.533415, -98.4091001],
	156: ["San Bernardino", "CA", 34.0573827, -117.1856247],
	157: ["San Diego", "CA", 32.985109, -117.080026],
	158: ["San Francisco", "CA", 37.7790262, -122.4199061],
	159: ["San Jose", "CA", 37.3895163, -121.8877285],
	160: ["San Juan", "PR", 18.3967, -66.0626],
	161: ["Santa Ana", "CA", 33.6956464, -117.9183309],
	162: ["Santa Barbara", "CA", 34.4252537, -119.8660691],
	163: ["Santa Clarita", "CA", 34.427245, -118.637359],
	164: ["Seattle", "WA", 47.5069174, -122.2969524],
	165: ["Shreveport", "LA", 32.5221828, -93.7651944],
	166: ["Sioux Falls", "SD", 43.5499749, -96.700327],
	167: ["South Bend", "IN", 41.6833813, -86.2500066],
	168: ["South Jersey", "NJ", 39.8621338, -75.0991456],
	169: ["South Suburban", "IL", 41.759049, -87.800137],
	170: ["Southern", "ME", 43.658751, -70.266264],
	171: ["Southern Maryland", "MD", 38.881318, -76.850687],
	172: ["Spokane", "WA", 47.6274391, -117.5133288],
	173: ["Springfield", "IL", 39.7952826, -89.6243899],
	174: ["Springfield", "MO", 37.2166779, -93.2920373],
	175: ["Syracuse", "NY", 43.1211708, -76.1311178],
	176: ["Tacoma", "WA", 47.2209964, -122.4734861],
	177: ["Tallahassee", "FL", 30.4380832, -84.2809332],
	178: ["Tampa", "FL", 27.9436224, -82.4389468],
	179: ["Teterboro", "NJ", 40.8511877, -74.0694467],
	180: ["Traverse City", "MI", 44.7606441, -85.6165301],
	181: ["Trenton", "NJ", 40.280531, -74.712018],
	182: ["Tucson", "AZ", 32.2228765, -110.9748477],
	183: ["Tulsa", "OK", 36.1556805, -95.9929113],
	184: ["Washington", "DC", 38.9173163, -76.9954865],
	185: ["Waterloo", "IA", 42.4979693, -92.3329637],
	186: ["Wenatchee", "WA", 47.4234599, -120.3103494],
	187: ["West Palm Beach", "FL", 26.715364, -80.0532942],
	188: ["Westchester", "NY", 41.0216443, -73.729067],
	189: ["Western Nassau", "NY", 40.724704, -73.6456502],	
	190: ["White River Junction", "VT", 43.6449413, -72.3332408],
	191: ["Wichita", "KS", 37.6922361, -97.3375448],
	192: ["Wilmington", "DE", 39.6587686, -75.5988509],	
	193: ["Yakima", "WA", 46.5707953, -120.5077086]
}	
	
	
	
console.log("----------------------------------------")	



function getZipData(zip, targ){

	console.log("---------------------")
	console.log('zip to get data for...', zip)
	var arr = zip.split('');

	var zip_0 = parseInt(arr[0]);
	var zip_1 = parseInt(arr[1]);
	var zip_2 = parseInt(arr[2]);

	var branch_0, branch_1, branch_2;

	branch_0 = zipsTree[zip_0]
	branch_1 = branch_0[zip_1]


	var mapInfo = {
                center: [-104.9903, 39.7392],
                zoom: 7,
                pitch: 39.50,
                bearing: 36.00
            }


	// we have to check if the first three nums of zipcode are valid (have a sorting center)
	if(branch_1){
			var branch_2 = branch_1[zip_2]

			if(branch_2){
				// Success! We can now have the key for this center's data
				console.log('!! sorting center for zip ', zip, ' is ', branch_2);


				var p = postalCentersMap[branch_2];
				mapInfo.center = [p[3], p[2]];
				// map.flyTo(mapInfo)

				


				console.log('need to draw data', zip)
				// drawZipSearchData(zip, p, targ, mapInfo, map)  // in drawCharts.js
				
				return [zip, p, targ, mapInfo, map];
				



				

			} else {
				console.log(zip, " is not available for data")
			}

	} else {
		console.log(zip, " is not available for data")
	}

}







	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	